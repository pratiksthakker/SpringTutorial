<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">
   
   <!-- Importing properties file -->
   <context:property-placeholder location="classpath:sports.properties"/>
   
   
   <!--IOC Starts This indicates Inversion Of Control since we are letting the configuration decide (TAKE CONTROL OF) which Class to initialize for this particular bean-->
   <!-- <bean id="myCoach" class="spring.core.inversionofcontrol.TrackCoach">
   </bean> -->
   
   <!-- <bean id="myCoach" class="spring.core.inversionofcontrol.BaseBallCoach">
   </bean> -->
   
    <!-- <bean id="myCoach" class="spring.core.inversionofcontrol.CricketCoach">
   </bean>  -->
   <!--  IOC Ends -->
   
   <!-- DI Start -->
   
   	<bean id="myFortune" class= "spring.core.dependencyinjection.HappyFortuneService"></bean>
   
   <!-- Constructor Injection Start -->	
   
	   <!-- 	<bean id="myCoach" class="spring.core.inversionofcontrol.BaseBallCoach">
	   		<constructor-arg ref="myFortune"/>Constructor injection
	   	</bean> -->
	   	
	   	 <bean id="myCoach" class="spring.core.inversionofcontrol.TrackCoach">
	   		<constructor-arg ref="myFortune"/>
	   	</bean>
   	
   	<!-- Constructor Injection Start -->	
   	
   	<!-- Setter Injection Start -->
   	
	   <!-- 	<bean id="myCricketCoach" class="spring.core.inversionofcontrol.CricketCoach">
	   		<property name="myFortuneService" ref ="myFortune"></property>
		 </bean> -->
		 
   	<!-- Setter Injection End -->
   	
   	<!-- Start Setter Injection with Literal Value Injection -->
   	
   		<!-- <bean id="myCricketCoach" class="spring.core.inversionofcontrol.CricketCoach">
	   		<property name="myFortuneService" ref ="myFortune"/>
	   		<property name="emailAddress" value ="IndianFan@cricket.com"/>
	   		<property name="team" value ="India"/>
		 </bean> -->
		 
   	<!-- End Setter Injection with Literal Value Injection -->
   	
   	<!-- Start Setter Injection with Literal Value Injection using properties file -->
   	
   		<bean id="myCricketCoach" class="spring.core.inversionofcontrol.CricketCoach">
	   		<property name="myFortuneService" ref ="myFortune"/>
	   		<property name="emailAddress" value ="${coach.email}"/>
	   		<property name="team" value ="${coach.team}"/>
		 </bean>
		 
   	<!-- End Setter Injection with Literal Value Injection using properties file-->
   	
   <!-- DI End -->
   
 </beans> 